{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Yoav\\\\Desktop\\\\supermarket\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegisterComponent = class RegisterComponent {\n  constructor(userManagementService) {\n    var _this = this;\n\n    this.userManagementService = userManagementService;\n    this.confirmPassword = '';\n    this.isUniqueId = null;\n    this.registerPayload = {};\n    this.isNextAllowed = /*#__PURE__*/_asyncToGenerator(function* () {\n      try {\n        _this.isUniqueId = yield _this.userManagementService.isIdUnique(_this.registerPayload.userId);\n        console.log(_this.userManagementService.temp);\n      } catch (error) {\n        alert('please try again later');\n      }\n    });\n\n    this.handleRegisterRequest = () => {\n      this.userManagementService.initRegister(this.registerPayload);\n      this.registerPayload = {};\n    };\n  }\n\n  ngOnInit() {\n    const prevBtns = document.querySelectorAll(\".btn-prev\");\n    const nextBtns = document.querySelectorAll(\".btn-next\");\n    const progress = document.getElementById(\"progress\");\n    const formSteps = document.querySelectorAll(\".form-step\");\n    const progressSteps = document.querySelectorAll(\".progress-step\");\n    let formStepsNum = 0;\n    nextBtns.forEach(btn => {\n      btn.addEventListener(\"click\", () => {\n        if (this.isUniqueId) {\n          formStepsNum++;\n          updateFormSteps();\n          updateProgressbar();\n        }\n      });\n    });\n    prevBtns.forEach(btn => {\n      btn.addEventListener(\"click\", () => {\n        formStepsNum--;\n        updateFormSteps();\n        updateProgressbar();\n      });\n    });\n\n    function updateFormSteps() {\n      formSteps.forEach(formStep => {\n        formStep.classList.contains(\"form-step-active\") && formStep.classList.remove(\"form-step-active\");\n      });\n      formSteps[formStepsNum].classList.add(\"form-step-active\");\n    }\n\n    function updateProgressbar() {\n      progressSteps.forEach((progressStep, idx) => {\n        if (idx < formStepsNum + 1) {\n          progressStep.classList.add(\"progress-step-active\");\n        } else {\n          progressStep.classList.remove(\"progress-step-active\");\n        }\n      });\n      const progressActive = document.querySelectorAll(\".progress-step-active\");\n      progress.style.width = (progressActive.length - 1) / (progressSteps.length - 1) * 100 + \"%\";\n    }\n  }\n\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"sources":["C:/Users/Yoav/Desktop/supermarket/client/src/app/components/landing/register/register.component.ts"],"names":["__decorate","Component","RegisterComponent","constructor","userManagementService","confirmPassword","isUniqueId","registerPayload","isNextAllowed","isIdUnique","userId","console","log","temp","error","alert","handleRegisterRequest","initRegister","ngOnInit","prevBtns","document","querySelectorAll","nextBtns","progress","getElementById","formSteps","progressSteps","formStepsNum","forEach","btn","addEventListener","updateFormSteps","updateProgressbar","formStep","classList","contains","remove","add","progressStep","idx","progressActive","style","width","length","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet RegisterComponent = class RegisterComponent {\r\n    constructor(userManagementService) {\r\n        this.userManagementService = userManagementService;\r\n        this.confirmPassword = '';\r\n        this.isUniqueId = null;\r\n        this.registerPayload = {};\r\n        this.isNextAllowed = async () => {\r\n            try {\r\n                this.isUniqueId = await this.userManagementService.isIdUnique(this.registerPayload.userId);\r\n                console.log(this.userManagementService.temp);\r\n            }\r\n            catch (error) {\r\n                alert('please try again later');\r\n            }\r\n        };\r\n        this.handleRegisterRequest = () => {\r\n            this.userManagementService.initRegister(this.registerPayload);\r\n            this.registerPayload = {};\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const prevBtns = document.querySelectorAll(\".btn-prev\");\r\n        const nextBtns = document.querySelectorAll(\".btn-next\");\r\n        const progress = document.getElementById(\"progress\");\r\n        const formSteps = document.querySelectorAll(\".form-step\");\r\n        const progressSteps = document.querySelectorAll(\".progress-step\");\r\n        let formStepsNum = 0;\r\n        nextBtns.forEach((btn) => {\r\n            btn.addEventListener(\"click\", () => {\r\n                if (this.isUniqueId) {\r\n                    formStepsNum++;\r\n                    updateFormSteps();\r\n                    updateProgressbar();\r\n                }\r\n            });\r\n        });\r\n        prevBtns.forEach((btn) => {\r\n            btn.addEventListener(\"click\", () => {\r\n                formStepsNum--;\r\n                updateFormSteps();\r\n                updateProgressbar();\r\n            });\r\n        });\r\n        function updateFormSteps() {\r\n            formSteps.forEach((formStep) => {\r\n                formStep.classList.contains(\"form-step-active\") &&\r\n                    formStep.classList.remove(\"form-step-active\");\r\n            });\r\n            formSteps[formStepsNum].classList.add(\"form-step-active\");\r\n        }\r\n        function updateProgressbar() {\r\n            progressSteps.forEach((progressStep, idx) => {\r\n                if (idx < formStepsNum + 1) {\r\n                    progressStep.classList.add(\"progress-step-active\");\r\n                }\r\n                else {\r\n                    progressStep.classList.remove(\"progress-step-active\");\r\n                }\r\n            });\r\n            const progressActive = document.querySelectorAll(\".progress-step-active\");\r\n            progress.style.width =\r\n                ((progressActive.length - 1) / (progressSteps.length - 1)) * 100 + \"%\";\r\n        }\r\n    }\r\n};\r\nRegisterComponent = __decorate([\r\n    Component({\r\n        selector: 'app-register',\r\n        templateUrl: './register.component.html',\r\n        styleUrls: ['./register.component.css']\r\n    })\r\n], RegisterComponent);\r\nexport { RegisterComponent };\r\n"]},"metadata":{},"sourceType":"module"}